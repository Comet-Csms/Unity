using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{
    [SerializeField]
    public float _speed = 10.0f;

    //bool _moveToDest = false; // 이동을 이런 식으로 bool형태로 관리했었지만, state 패턴으로 변경
    Vector3 _destPos;

    // Start is called before the first frame update
    void Start()
    {
        Managers.Input.MouseAction -= OnMouseClicked;
        Managers.Input.MouseAction += OnMouseClicked;
    }

    public enum PlayerState // Player의 상태
    {
        Die, // 죽음
        Moving, // 움직임
        Idle // 멈춤
    }

    PlayerState _state = PlayerState.Idle; // 초기 상태를 멈춤으로 세팅

    void UpdateDie()
    {
        // 아무것도 못함
    }

    void UpdateMoving()
    {
        Vector3 dir = _destPos - transform.position;
        if (dir.magnitude < 0.0001f)
        {
            _state = PlayerState.Idle; // 멈춘 상태
        }
        else
        {
            float moveDist = Mathf.Clamp(_speed * Time.deltaTime, 0, dir.magnitude);

            transform.position += dir.normalized * moveDist;
            transform.rotation = Quaternion.Slerp(transform.rotation, Quaternion.LookRotation(dir), 20 * Time.deltaTime);
        }

        // 애니메이션
        Animator anim = GetComponent<Animator>(); // Animator Component 불러오기
        anim.SetFloat("speed", _speed); // 움직일 때 _speed 값을 넘겨줌
    }

    void UpdateIdle()
    {
        // 애니메이션
        Animator anim = GetComponent<Animator>(); // Animator Component 불러오기
        anim.SetFloat("speed", 0); // 멈춘 상태일 때 0을 넘겨줌
    }

    // Update is called once per frame
    void Update()
    {
        switch (_state)
        {
            case PlayerState.Die: // 죽은 상태라면
                UpdateDie();
                break;
            case PlayerState.Moving: // 움직이는 상태라면
                UpdateMoving();
                break;
            case PlayerState.Idle: // 멈춘 상태라면
                UpdateIdle();
                break;
        }
    }

    void OnMouseClicked(Define.MouseEvent e)
    {
        if (_state == PlayerState.Die) // 죽은 상태라면
        {
            return; // 마우스 이벤트가 있어도 그냥 return
        }

        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);

        Debug.DrawRay(Camera.main.transform.position, ray.direction * 100.0f, Color.red, 1.0f);

        RaycastHit hit;
        if (Physics.Raycast(ray, out hit, 100.0f, LayerMask.GetMask("Wall")))
        {
            _destPos = hit.point;
            _state = PlayerState.Moving; // 움직이는 상태
        }
    }
}
