using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class UIManager
{
    int _order = 0; // 최근에 사용한 order값 저장

    Stack<UI_Popup> _popupStack = new Stack<UI_Popup>(); // GameObject를 들고 있어도 되지만, 팝업이 가지고 있는 각 Script component가 UI_Popup을 다들 상속받고 있기 때문에, UI_Popup component를 들고 있는 것이 나음

    public T ShowPopupUI<T>(string name = null) where T : UI_Popup // 팝업 띄우기 // name은 Prefab의 이름, T는 Script(component)의 이름 // T는 UI_Popup을 상속받는 Script들
    {
        if(string.IsNullOrEmpty(name)) // name을 안받았다면
        {
            name = typeof(T).Name; // T의 이름으로 name에 저장
        }

        GameObject go = Managers.Resource.Instantiate($"UI/Popup/{name}"); // Prefab에서 꺼내와 만든 Object를 go에 저장
        T popup = Util.GetOrAddComponent<T>(go); // T Script component를 찾아와 T타입의 popup에 저장
        _popupStack.Push(popup); // popup을 _popupStack에 저장
        //_order++; // ShowPopupUI를 통해 Popup을 띄운 것이 아니라, 시작할 때부터 Scene에 만들어 놓은 경우에 문제 발생
        return popup; // T타입의 popup을 return
    }

    public void ClosePopupUI(UI_Popup popup) // 닫을 팝업을 명시해줘서, 닫힐 팝업이 popup이 맞는지 확인 // 좀 더 안정적인 버전
    {
        if (_popupStack.Count == 0) // _popupStack에 아무것도 없다면
        {
            return; // 그냥 return
        }

        if (_popupStack.Peek() != popup) // Peek로 마지막 Popup을 엿보고와서, popup과 비교했는데 다르면
        {
            Debug.Log("Close Popup Failed!");
            return; // 그냥 return
        }

        ClosePopupUI(); // 여기까지 문제없었으면 팝업 그냥 닫기
    }

    public void ClosePopupUI() // 팝업 닫기
    {
        if (_popupStack.Count == 0) // _popupStack에 아무것도 없다면
        {
            return; // 그냥 return
        }

        UI_Popup popup = _popupStack.Pop(); // 가장 최근에 띄운 popup을 가져와 UI_Popup타입의 popup에 저장
        Managers.Resource.Destroy(popup.gameObject); // popup으로 Object를 찾아 삭제
        popup = null; // popup은 삭제됐으니 접근하면 안됨, 혹시 몰라 null로 초기화
        _order--;
    }

    public void CloseAllPopupUI() // 모든 팝업을 다 지우기
    {
        while (_popupStack.Count > 0) // _popupStack에 아무것도 없을 때까지
        {
            ClosePopupUI();
        }
    }
}
